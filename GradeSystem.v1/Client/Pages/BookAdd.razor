@page "/Book"
@page "/Book/{QR:int}"
@using System.Net.Http.Headers;

@inject IBookService BookService
@inject NavigationManager NavigationManager

<h3>BookAddEdit</h3>

@if (QR == null)
{
    <PageTitle>Add new Book</PageTitle>
    <h3>Add new Book</h3>
}
else
{
    <PageTitle>Edit @book.QRCode </PageTitle>
    <h3>Edit @book.QRCode </h3>
}

<EditForm Model="book" OnSubmit="HandleSubmit">
    <div>
        <label for="Title">Title</label>
        <InputText id="Title" @bind-Value="book.Title" class="form-control"></InputText>
    </div>
    <div>
        <label for="Author">Author</label>
        <InputText id="Author" @bind-Value="book.Author" class="form-control"></InputText>

    </div>
        <label for="Img">Img</label>
        <InputFile id="img"> </InputFile>

    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DelateBook">Delete Book</button>

</EditForm>
<label for="Number of Books">Title</label>
<input type="number" @bind-value="amount"/>

@code {
    [Parameter]
    public int? QR { get; set; }

    Book book = new Book();
    int amount = 1;
    string btnText = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        btnText = QR == null ? "Save New Book" : "Update Book";
        await BookService.GetBooks();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (QR == null)
        {

        }
        else
        {
            book = await BookService.GetBookByQR((int)QR);
        }
    }
    async Task HandleSubmit()
    {
        if(amount<=0)
        {
            amount = 1;
        }
        if (QR == null)
        {
            book.IsBoocked = false;
            book.IsBoocked = false;
            while (amount != 0)
            {
                await BookService.CreateBook(book);
                amount--;
            }
        }
        else
        {
            await BookService.UpdateBook(book);
        }
        NavigationManager.NavigateTo("/Library");
    }
    async Task DelateBook()
    {

        await BookService.DeleteBook(book.QRCode);
        NavigationManager.NavigateTo("/Library");
    }

    
}
