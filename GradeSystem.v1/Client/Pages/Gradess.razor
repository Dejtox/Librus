@page "/gradess"
@using System.Security.Claims
@inject IStudentService StudentService
@inject IParentService ParentService
@inject IGradeService GradeService
@inject ISubjectService SubjectService
@inject IUserService UserService
@inject ITeacherService TeacherService
@inject IJSRuntime js
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationMenager

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Subject</th>
            <th>Grades</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
           @foreach (var subject in SubjectService.Subjects)
           {
                <tr>
                    <td class="col-3">@subject.SubjectName</td>
                    <td class="col-7">
                        @foreach (var grade in GradeService.Grades)
                        {
                            if(subject.SubjectID == grade.SubjectID)
                            {
                                if(IDU == grade.StudentID)
                                {
                                    if (grade.GradeWeight == 1)
                                    {
                                        color = "blue";
                                    }
                                    else if (grade.GradeWeight == 2)
                                    {
                                        color = "green";
                                    }
                                    else if (grade.GradeWeight >= 3)
                                    {
                                        color = "yellow";
                                    }
                                    <p style="background-color:@color;" class="d-inline-flex m-1 p-1">@grade.GradeNumber</p>
                                }
                            }
                        }
                    </td>
                <td class="col-2"></td>
                </tr>
           }
    </tbody>
</table>

@code {
    [Parameter]
    public int? ID { get; set; }

    string color = "";

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    Student student = new Student();
    User user = new User();

    string btnText = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        btnText = ID == null ? "Save New Parent" : "Update Parent";
        await StudentService.GetStudents();
        await ParentService.GetParents();
        await GradeService.GetGrades();
        await TeacherService.GetTeachers();
        await SubjectService.GetSubjects();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ID == null)
        {
            await StudentService.GetParents();
            await StudentService.GetClasses();
        }
        else
        {
            student = await StudentService.GetStudentById((int)ID);
            user = await UserService.GetUserByID(student.UserID);
        }

        await GetClaimsGetID();
        await base.OnParametersSetAsync();
    }

    int IDU;
    private async Task GetClaimsGetID()
    {
        var user = (await authenticationState).User;
        foreach (var claim in user.Claims)
        {
            if (claim.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress")
            {
                IDU = Int32.Parse(claim.Value);
            }
        };
    }

    void ShowGrade(int id)
    {
        NavigationMenager.NavigateTo($"grade/{id}");
    }
    void CreateGrade()
    {
        NavigationMenager.NavigateTo("/grade");
    }
}