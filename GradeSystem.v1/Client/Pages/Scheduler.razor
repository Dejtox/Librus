@page "/scheduler"
@inject DialogService DialogService
@inject IEnrollmentService EnrollmentService
@inject IStudentService StudentService
@inject NavigationManager NavigationMenager
@inject AuthenticationStateProvider authenticationStateProvider
@using Radzen



<RadzenScheduler SelectedIndex="2" Data=@data TItem="DataItem" Style="" StartProperty="Start" EndProperty="End" TextProperty="Text">
    <RadzenDayView />
    <RadzenWeekView />

</RadzenScheduler>
@code {
    int ID;
    Student student;

    protected override async Task OnInitializedAsync()
    {
        await EnrollmentService.GetEnrollments();
        await GetClaimsGetID();
        student = await StudentService.GetStudentById(ID);
        await Fill();
    }

    class DataItem
    {
        public DateTime Start { get; set; }
        public DateTime End { get; set; }
        public string Text { get; set; }
    }

    IList<DataItem> data = new List<DataItem>();


    async Task Fill()
    {

        foreach (var enrolment in EnrollmentService.Enrollments)
        {
            if (enrolment.ClassID == student.ClassID)
            {
                data.Add( new DataItem { Start = enrolment.Date, End = enrolment.Date.AddMinutes(45), Text = enrolment.Subject.Teacher.LastName + enrolment.Subject.Teacher.FirstName + enrolment.Subject.SubjectName });
            }
        }
    }

    
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    void ShowEnrollment(int id)
    {
        NavigationMenager.NavigateTo($"enrollment/{id}");
    }
    void CreateEnrollment()
    {
        NavigationMenager.NavigateTo("/enrollment");
    }
    private async Task GetClaimsGetID()
    {
        var user = (await authenticationState).User;
        foreach (var claim in user.Claims)
        {
            if (claim.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress")
            {
                ID = Int32.Parse(claim.Value);
            }
        };
    }
}