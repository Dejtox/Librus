@page "/student"
@page "/student/{id:int}"
@inject IStudentService StudentService

@if(ID==null)
{
    <PageTitle>Add new student</PageTitle>
    <h3>Add new student</h3>
}
else
{
    <PageTitle>Edit @student.FirstName @student.LastName</PageTitle>
    <h3>Edit @student.FirstName @student.LastName</h3>
}
<EditForm Model="student" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="student.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lasttname">Last Name</label>
        <InputText id="lastname" @bind-Value="student.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="address">Address</label>
        <InputText id="address" @bind-Value="student.Address" class="form-control"></InputText>
    </div>
    <div>
        <label for="pesel">Pesel</label>
        <InputText id="pesel" @bind-Value="student.Pesel" class="form-control"></InputText>
    </div>
    <div>
        <label for="login">Login</label>
        <InputText id="login" @bind-Value="student.Login" class="form-control"></InputText>
    </div>
    <div>
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="student.Password" class="form-control"></InputText>
    </div>
    <div>
        <label for="classname">Class</label>
        <InputSelect @bind-Value="student.ClassID" class="form-select">

            @foreach (var classs in StudentService.Classes)
            {
                <option value="@classs.ClassID">@classs.ClassName</option>
            }
        </InputSelect>
    </div>
    <div>
        <label for="parentname">Parent</label>
        <InputSelect @bind-Value="student.ParentID" class="form-select">

            @foreach (var parent in StudentService.Parents)
            {
                <option value="@parent.ParentID">@parent.FirstName @parent.LastName</option>

            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DelateParent">Delete Parent</button>

</EditForm>

@code {
    [Parameter]
    public int? ID { get; set; }

    Student student = new Student();
    string btnText = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        btnText = ID == null ? "Save New Parent" : "Update Parent";
        await StudentService.GetStudents();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ID == null)
        {
            await StudentService.GetParents();
            await StudentService.GetClasses();
        }
        else
        {
            student = await StudentService.GetStudentById((int)ID);
        }
    }
    async Task HandleSubmit()
    {
        if (ID == null)
        {
            student.StudentRole = "Student";
            await StudentService.CreateStudent(student);
        }
        else
        {
            await StudentService.UpdateStudent(student);
        }
    }
    async Task DelateParent()
    {

        await StudentService.DeleteStudent(student.ParentID);

    }


}
