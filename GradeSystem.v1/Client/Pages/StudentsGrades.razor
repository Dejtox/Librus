@*
@page "/sg"
@using GradeSystem.v1.Client.Auth
@using System.Net.Http.Headers
@inject IGradeService GradeService
@inject IStudentService StudentService
@inject NavigationManager NavigationMenager
@attribute [Authorize(Roles = "Teacher")]
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navMenager

@inject HttpClient httpClient

<PageTitle> Grade </PageTitle>

<h1>Grade</h1>

<div class="all">
    @foreach (var student in StudentService.Students)
    {
    <div class="container">
        <h2>@student.FirstName</h2>
            @foreach (var grade in GradeService.Grades)
            {
                @if(grade.StudentID == student.StudentID)
                {
                    {
                        <div class="gradeInfo">
                            <h1>@grade.GradeNumber</h1>
                            <h3 class="comms">Weight: @grade.GradeWeight</h3>
                            <h4 class="comms">Comm: @grade.Description</h4>
                        </div>
                    }
                }
            }
    </div>
    }
</div>

<button type="button" class="btn btn-primary" @onclick="CreateGrade">Create New</button>

@code {
    protected override async Task OnInitializedAsync()
    {
        await GradeService.GetGrades();
        await StudentService.GetStudents();
    }
    void ShowGrade(int id)
    {
        NavigationMenager.NavigateTo($"grade/{id}");
    }
    void CreateGrade()
    {
        NavigationMenager.NavigateTo("/grade");
    }
    void ShowStudent(int id)
    {
        NavigationMenager.NavigateTo($"student/{id}");
    }


}
*@