@page "/counter"

<h3>Counter</h3>

<div>
    <label for="numberOfSegments">Number of Segments:</label>
    <input type="number" id="numberOfSegments" @bind="numberOfSegments" />
    <button class="btn btn-primary" @onclick="CreateSegments">Create Segments</button>
</div>

@if (segments != null && segments.Any())
{
    @foreach (var segment in segments)
    {
        <div class="card">
            <div class="card-header" id="@($"segmentHeading{segment.Id}")">
                <h2 class="mb-0">
                    <button class="btn btn-link" @onclick="() => ToggleCollapse(segment.Id)" aria-expanded="@segment.IsCollapsed.ToString().ToLower()" aria-controls="@($"segmentCollapse{segment.Id}")">
                        Segment @segment.Id
                    </button>
                </h2>
            </div>

            <div id="@($"segmentCollapse{segment.Id}")" class="@GetCollapseClass(segment.Id)" aria-labelledby="@($"segmentHeading{segment.Id}")">
                <div class="card-body">
                    <p>Current count: @segment.CurrentCount</p>
                    <button class="btn btn-primary" @onclick="() => IncrementCount(segment.Id)">Increment</button>
                </div>
            </div>
        </div>
    }
}

@code {
    private int numberOfSegments;
    private List<Segment> segments;

    private class Segment
    {
        public int Id { get; set; }
        public int CurrentCount { get; set; }
        public bool IsCollapsed { get; set; }
    }

    private void CreateSegments()
    {
        segments = new List<Segment>();

        for (int i = 1; i <= numberOfSegments; i++)
        {
            segments.Add(new Segment { Id = i });
        }
    }

    private void IncrementCount(int segmentId)
    {
        var segment = segments.FirstOrDefault(s => s.Id == segmentId);
        if (segment != null)
        {
            segment.CurrentCount++;
        }
    }

    private void ToggleCollapse(int segmentId)
    {
        var segment = segments.FirstOrDefault(s => s.Id == segmentId);
        if (segment != null)
        {
            segment.IsCollapsed = !segment.IsCollapsed;
        }
    }

    private string GetCollapseClass(int segmentId)
    {
        var segment = segments.FirstOrDefault(s => s.Id == segmentId);
        return segment != null && segment.IsCollapsed ? "collapse" : "collapse show";
    }
}